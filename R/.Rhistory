library(qrng)
toc <- Sys.time()
# samps <- c(3,5,8,10,15,20,30,40,50,60)
samps <- 3
pwr <- NULL
for (j in 1:length(samps)){
n1 <- samps[j]; n2 <- samps[j]
pwr_temp <- NULL
print(j)
for (i in 1:100){
sob <- sobol(65536, d = 3, randomize = "digital.shift", set.seed = i)
x <- qchisq(sob[,1], n1 - 1)
y <- qchisq(sob[,2], n2 - 1)
z <- qnorm(sob[,3], delta, sqrt(sigma_1^2/n1 + sigma_2^2/n2))
sdv <- sqrt(sigma_1^2*x/((n1 - 1)*n1) + sigma_2^2*y/(n2*(n2 - 1)))
dfw <- sdv^4/(sigma_1^4*x^2/((n1 - 1)^3*n1^2) + sigma_2^4*y^2/((n2 - 1)^3*n2^2))
dfw <- 4
thres <- (Eu - abs(z))/qt(1-alpha, dfw)
pwr_temp <- c(pwr_temp, mean(ifelse(sdv <= thres,1,0)))
}
pwr <- rbind(pwr, pwr_temp)
print(mean(pwr_temp))
print(sd(pwr_temp))
}
tic <- Sys.time()
tic-toc
delta = - 4
sigma_1 = 15
sigma_2 = 18
toc <- Sys.time()
# samps <- c(3,5,8,10,15,20,30,40,50,60)
samps <- 3
pwr <- NULL
for (j in 1:length(samps)){
n1 <- samps[j]; n2 <- samps[j]
pwr_temp <- NULL
print(j)
for (i in 1:100){
sob <- sobol(65536, d = 3, randomize = "digital.shift", set.seed = i)
x <- qchisq(sob[,1], n1 - 1)
y <- qchisq(sob[,2], n2 - 1)
z <- qnorm(sob[,3], delta, sqrt(sigma_1^2/n1 + sigma_2^2/n2))
sdv <- sqrt(sigma_1^2*x/((n1 - 1)*n1) + sigma_2^2*y/(n2*(n2 - 1)))
dfw <- sdv^4/(sigma_1^4*x^2/((n1 - 1)^3*n1^2) + sigma_2^4*y^2/((n2 - 1)^3*n2^2))
dfw <- 4
thres <- (Eu - abs(z))/qt(1-alpha, dfw)
pwr_temp <- c(pwr_temp, mean(ifelse(sdv <= thres,1,0)))
}
pwr <- rbind(pwr, pwr_temp)
print(mean(pwr_temp))
print(sd(pwr_temp))
}
tic <- Sys.time()
tic-toc
Eu = 19.2
toc <- Sys.time()
# samps <- c(3,5,8,10,15,20,30,40,50,60)
samps <- 3
pwr <- NULL
for (j in 1:length(samps)){
n1 <- samps[j]; n2 <- samps[j]
pwr_temp <- NULL
print(j)
for (i in 1:100){
sob <- sobol(65536, d = 3, randomize = "digital.shift", set.seed = i)
x <- qchisq(sob[,1], n1 - 1)
y <- qchisq(sob[,2], n2 - 1)
z <- qnorm(sob[,3], delta, sqrt(sigma_1^2/n1 + sigma_2^2/n2))
sdv <- sqrt(sigma_1^2*x/((n1 - 1)*n1) + sigma_2^2*y/(n2*(n2 - 1)))
dfw <- sdv^4/(sigma_1^4*x^2/((n1 - 1)^3*n1^2) + sigma_2^4*y^2/((n2 - 1)^3*n2^2))
dfw <- 4
thres <- (Eu - abs(z))/qt(1-alpha, dfw)
pwr_temp <- c(pwr_temp, mean(ifelse(sdv <= thres,1,0)))
}
pwr <- rbind(pwr, pwr_temp)
print(mean(pwr_temp))
print(sd(pwr_temp))
}
tic <- Sys.time()
tic-toc
alpha = 0.05
toc <- Sys.time()
# samps <- c(3,5,8,10,15,20,30,40,50,60)
samps <- 3
pwr <- NULL
for (j in 1:length(samps)){
n1 <- samps[j]; n2 <- samps[j]
pwr_temp <- NULL
print(j)
for (i in 1:100){
sob <- sobol(65536, d = 3, randomize = "digital.shift", set.seed = i)
x <- qchisq(sob[,1], n1 - 1)
y <- qchisq(sob[,2], n2 - 1)
z <- qnorm(sob[,3], delta, sqrt(sigma_1^2/n1 + sigma_2^2/n2))
sdv <- sqrt(sigma_1^2*x/((n1 - 1)*n1) + sigma_2^2*y/(n2*(n2 - 1)))
dfw <- sdv^4/(sigma_1^4*x^2/((n1 - 1)^3*n1^2) + sigma_2^4*y^2/((n2 - 1)^3*n2^2))
dfw <- 4
thres <- (Eu - abs(z))/qt(1-alpha, dfw)
pwr_temp <- c(pwr_temp, mean(ifelse(sdv <= thres,1,0)))
}
pwr <- rbind(pwr, pwr_temp)
print(mean(pwr_temp))
print(sd(pwr_temp))
}
tic <- Sys.time()
tic-toc
toc <- Sys.time()
# samps <- c(3,5,8,10,15,20,30,40,50,60)
samps <- 3
pwr <- NULL
for (j in 1:length(samps)){
n1 <- samps[j]; n2 <- samps[j]
pwr_temp <- NULL
print(j)
for (i in 1:1){
sob <- sobol(65536, d = 3, randomize = "digital.shift", set.seed = i)
x <- qchisq(sob[,1], n1 - 1)
y <- qchisq(sob[,2], n2 - 1)
z <- qnorm(sob[,3], delta, sqrt(sigma_1^2/n1 + sigma_2^2/n2))
sdv <- sqrt(sigma_1^2*x/((n1 - 1)*n1) + sigma_2^2*y/(n2*(n2 - 1)))
dfw <- sdv^4/(sigma_1^4*x^2/((n1 - 1)^3*n1^2) + sigma_2^4*y^2/((n2 - 1)^3*n2^2))
dfw <- 4
thres <- (Eu - abs(z))/qt(1-alpha, dfw)
pwr_temp <- c(pwr_temp, mean(ifelse(sdv <= thres,1,0)))
}
pwr <- rbind(pwr, pwr_temp)
print(mean(pwr_temp))
print(sd(pwr_temp))
}
tic <- Sys.time()
tic-toc
toc <- Sys.time()
# samps <- c(3,5,8,10,15,20,30,40,50,60)
samps <- 3
pwr <- NULL
for (j in 1:length(samps)){
n1 <- samps[j]; n2 <- samps[j]
pwr_temp <- NULL
print(j)
for (i in 1:1){
sob <- sobol(65536, d = 3, randomize = "digital.shift", set.seed = i)
x <- qchisq(sob[,1], n1 - 1)
y <- qchisq(sob[,2], n2 - 1)
z <- qnorm(sob[,3], delta, sqrt(sigma_1^2/n1 + sigma_2^2/n2))
sdv <- sqrt(sigma_1^2*x/((n1 - 1)*n1) + sigma_2^2*y/(n2*(n2 - 1)))
dfw <- sdv^4/(sigma_1^4*x^2/((n1 - 1)^3*n1^2) + sigma_2^4*y^2/((n2 - 1)^3*n2^2))
dfw <- 4
thres <- (Eu - abs(z))/qt(1-alpha, dfw)
pwr_temp <- c(pwr_temp, mean(ifelse(sdv <= thres,1,0)))
}
pwr <- rbind(pwr, pwr_temp)
print(mean(pwr_temp))
print(sd(pwr_temp))
}
tic <- Sys.time()
tic-toc
toc <- Sys.time()
# samps <- c(3,5,8,10,15,20,30,40,50,60)
samps <- 3
pwr <- NULL
for (j in 1:length(samps)){
n1 <- samps[j]; n2 <- samps[j]
pwr_temp <- NULL
print(j)
for (i in 1:1){
sob <- sobol(65536, d = 3, randomize = "digital.shift", set.seed = i)
x <- qchisq(sob[,1], n1 - 1)
y <- qchisq(sob[,2], n2 - 1)
z <- qnorm(sob[,3], delta, sqrt(sigma_1^2/n1 + sigma_2^2/n2))
sdv <- sqrt(sigma_1^2*x/((n1 - 1)*n1) + sigma_2^2*y/(n2*(n2 - 1)))
dfw <- sdv^4/(sigma_1^4*x^2/((n1 - 1)^3*n1^2) + sigma_2^4*y^2/((n2 - 1)^3*n2^2))
dfw <- 4
thres <- (Eu - abs(z))/qt(1-alpha, dfw)
pwr_temp <- c(pwr_temp, mean(ifelse(sdv <= thres,1,0)))
}
pwr <- rbind(pwr, pwr_temp)
print(mean(pwr_temp))
print(sd(pwr_temp))
}
tic <- Sys.time()
tic-toc
(sigma_1^2/n1 + sigma_2^2/n2)^2/(sigma_1^4/(n1^2*n1) + sigma_2^4/(n2^2*n2))
toc <- Sys.time()
# samps <- c(3,5,8,10,15,20,30,40,50,60)
samps <- 3
pwr <- NULL
for (j in 1:length(samps)){
n1 <- samps[j]; n2 <- samps[j]
pwr_temp <- NULL
print(j)
for (i in 1:1){
sob <- sobol(65536, d = 3, randomize = "digital.shift", set.seed = i)
x <- qchisq(sob[,1], n1 - 1)
y <- qchisq(sob[,2], n2 - 1)
z <- qnorm(sob[,3], delta, sqrt(sigma_1^2/n1 + sigma_2^2/n2))
sdv <- sqrt(sigma_1^2*x/((n1 - 1)*n1) + sigma_2^2*y/(n2*(n2 - 1)))
dfw <- sdv^4/(sigma_1^4*x^2/((n1 - 1)^3*n1^2) + sigma_2^4*y^2/((n2 - 1)^3*n2^2))
dfw <- (sigma_1^2/n1 + sigma_2^2/n2)^2/(sigma_1^4/(n1^2*n1) + sigma_2^4/(n2^2*n2))
thres <- (Eu - abs(z))/qt(1-alpha, dfw)
pwr_temp <- c(pwr_temp, mean(ifelse(sdv <= thres,1,0)))
}
pwr <- rbind(pwr, pwr_temp)
print(mean(pwr_temp))
print(sd(pwr_temp))
}
tic <- Sys.time()
tic-toc
toc <- Sys.time()
# samps <- c(3,5,8,10,15,20,30,40,50,60)
samps <- 3
pwr <- NULL
for (j in 1:length(samps)){
n1 <- samps[j]; n2 <- samps[j]
pwr_temp <- NULL
print(j)
for (i in 1:1){
sob <- sobol(65536, d = 3, randomize = "digital.shift", set.seed = i)
x <- qchisq(sob[,1], n1 - 1)
y <- qchisq(sob[,2], n2 - 1)
z <- qnorm(sob[,3], delta, sqrt(sigma_1^2/n1 + sigma_2^2/n2))
sdv <- sqrt(sigma_1^2*x/((n1 - 1)*n1) + sigma_2^2*y/(n2*(n2 - 1)))
dfw <- sdv^4/(sigma_1^4*x^2/((n1 - 1)^3*n1^2) + sigma_2^4*y^2/((n2 - 1)^3*n2^2))
dfw <- (sigma_1^2/n1 + sigma_2^2/n2)^2/(sigma_1^4/(n1^2*n1) + sigma_2^4/(n2^2*n2))
thres <- (Eu - abs(z))/qt(1-alpha, dfw)
pwr_temp <- c(pwr_temp, mean(ifelse(sdv <= thres,1,0)))
}
pwr <- rbind(pwr, pwr_temp)
print(mean(pwr_temp))
print(sd(pwr_temp))
}
tic <- Sys.time()
tic-toc
toc <- Sys.time()
# samps <- c(3,5,8,10,15,20,30,40,50,60)
samps <- 3
pwr <- NULL
for (j in 1:length(samps)){
n1 <- samps[j]; n2 <- samps[j]
pwr_temp <- NULL
print(j)
for (i in 1:1){
sob <- sobol(65536, d = 3, randomize = "digital.shift", set.seed = i)
x <- qchisq(sob[,1], n1 - 1)
y <- qchisq(sob[,2], n2 - 1)
z <- qnorm(sob[,3], delta, sqrt(sigma_1^2/n1 + sigma_2^2/n2))
sdv <- sqrt(sigma_1^2*x/((n1 - 1)*n1) + sigma_2^2*y/(n2*(n2 - 1)))
dfw <- sdv^4/(sigma_1^4*x^2/((n1 - 1)^3*n1^2) + sigma_2^4*y^2/((n2 - 1)^3*n2^2))
dfw <- (sigma_1^2/n1 + sigma_2^2/n2)^2/(sigma_1^4/(n1^2*n1) + sigma_2^4/(n2^2*n2))
thres <- (Eu - abs(z))/qt(1-alpha, dfw)
pwr_temp <- c(pwr_temp, mean(ifelse(sdv <= thres,1,0)))
}
pwr <- rbind(pwr, pwr_temp)
print(mean(pwr_temp))
print(sd(pwr_temp))
}
tic <- Sys.time()
tic-toc
toc <- Sys.time()
# samps <- c(3,5,8,10,15,20,30,40,50,60)
samps <- 3
pwr <- NULL
for (j in 1:length(samps)){
n1 <- samps[j]; n2 <- samps[j]
pwr_temp <- NULL
print(j)
for (i in 1:1){
sob <- sobol(65536, d = 3, randomize = "digital.shift", set.seed = i)
x <- qchisq(sob[,1], n1 - 1)
y <- qchisq(sob[,2], n2 - 1)
z <- qnorm(sob[,3], delta, sqrt(sigma_1^2/n1 + sigma_2^2/n2))
sdv <- sqrt(sigma_1^2*x/((n1 - 1)*n1) + sigma_2^2*y/(n2*(n2 - 1)))
dfw <- sdv^4/(sigma_1^4*x^2/((n1 - 1)^3*n1^2) + sigma_2^4*y^2/((n2 - 1)^3*n2^2))
dfw <- (sigma_1^2/n1 + sigma_2^2/n2)^2/(sigma_1^4/(n1^2*n1) + sigma_2^4/(n2^2*n2))
thres <- (Eu - abs(z))/qt(1-alpha, dfw)
pwr_temp <- c(pwr_temp, mean(ifelse(sdv <= thres,1,0)))
}
pwr <- rbind(pwr, pwr_temp)
print(mean(pwr_temp))
print(sd(pwr_temp))
}
tic <- Sys.time()
tic-toc
?t.test
t.test(rnorm(10), rnorm(10), paired = TRUE)
library(devtools)
devtools::check()
